# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: oscillodsp.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='oscillodsp.proto',
  package='',
  syntax='proto2',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10oscillodsp.proto\"\x1e\n\x0b\x45\x63hoRequest\x12\x0f\n\x07\x63ontent\x18\x01 \x02(\t\"\x0e\n\x0cGetWaveGroup\"\x0b\n\tTerminate\"\x96\x01\n\tConfigure\x12\x12\n\nresolution\x18\x01 \x02(\r\x12\x1e\n\x08trigmode\x18\x02 \x02(\x0e\x32\x0c.TriggerMode\x12\x1e\n\x08trigtype\x18\x03 \x02(\x0e\x32\x0c.TriggerType\x12\x0f\n\x07\x63h_trig\x18\x04 \x02(\r\x12\x11\n\ttriglevel\x18\x05 \x02(\x02\x12\x11\n\ttimescale\x18\x06 \x02(\x02\"\xa7\x01\n\x0cMessageToDSP\x12\n\n\x02id\x18\x01 \x02(\r\x12\x1f\n\x07\x65\x63horeq\x18\x02 \x01(\x0b\x32\x0c.EchoRequestH\x00\x12\x1c\n\x06\x63onfig\x18\x03 \x01(\x0b\x32\n.ConfigureH\x00\x12 \n\x07getwave\x18\x04 \x01(\x0b\x32\r.GetWaveGroupH\x00\x12\x1f\n\tterminate\x18\x05 \x01(\x0b\x32\n.TerminateH\x00\x42\t\n\x07payload\"&\n\x0b\x41\x63knowledge\x12\x17\n\x03\x65rr\x18\x01 \x02(\x0e\x32\n.ErrorCode\"\x1c\n\tEchoReply\x12\x0f\n\x07\x63ontent\x18\x01 \x02(\t\"E\n\rChannelConfig\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0c\n\x04unit\x18\x02 \x02(\t\x12\x0b\n\x03min\x18\x03 \x02(\x02\x12\x0b\n\x03max\x18\x04 \x02(\x02\"\x8e\x01\n\x0b\x43onfigReply\x12\x17\n\x03\x65rr\x18\x01 \x02(\x0e\x32\n.ErrorCode\x12\x12\n\nsamplerate\x18\x02 \x02(\x02\x12\x19\n\x11\x64\x65\x66\x61ult_timescale\x18\x03 \x02(\x02\x12\x15\n\rmax_timescale\x18\x04 \x02(\x02\x12 \n\x08\x63hconfig\x18\x05 \x03(\x0b\x32\x0e.ChannelConfig\"*\n\x04Wave\x12\r\n\x05\x63h_id\x18\x01 \x02(\r\x12\x13\n\x07samples\x18\x02 \x03(\x11\x42\x02\x10\x01\"3\n\tWaveGroup\x12\x11\n\ttriggered\x18\x01 \x02(\x08\x12\x13\n\x04wave\x18\x02 \x03(\x0b\x32\x05.Wave\"\xa8\x01\n\rMessageToHost\x12\n\n\x02id\x18\x01 \x02(\r\x12\x1b\n\x03\x61\x63k\x18\x02 \x01(\x0b\x32\x0c.AcknowledgeH\x00\x12\x1d\n\x07\x65\x63horep\x18\x03 \x01(\x0b\x32\n.EchoReplyH\x00\x12\x1f\n\twavegroup\x18\x04 \x01(\x0b\x32\n.WaveGroupH\x00\x12#\n\x0b\x63onfigreply\x18\x05 \x01(\x0b\x32\x0c.ConfigReplyH\x00\x42\t\n\x07payload*O\n\tErrorCode\x12\x0b\n\x07NoError\x10\x00\x12\x14\n\x10NotConfiguredYet\x10\x01\x12\x0f\n\x0b\x43onfigError\x10\x02\x12\x0e\n\nParamError\x10\x03*/\n\x0bTriggerMode\x12\x08\n\x04\x41uto\x10\x00\x12\n\n\x06Normal\x10\x01\x12\n\n\x06Single\x10\x02*.\n\x0bTriggerType\x12\x0e\n\nRisingEdge\x10\x00\x12\x0f\n\x0b\x46\x61llingEdge\x10\x01'
)

_ERRORCODE = _descriptor.EnumDescriptor(
  name='ErrorCode',
  full_name='ErrorCode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NoError', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NotConfiguredYet', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ConfigError', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ParamError', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=958,
  serialized_end=1037,
)
_sym_db.RegisterEnumDescriptor(_ERRORCODE)

ErrorCode = enum_type_wrapper.EnumTypeWrapper(_ERRORCODE)
_TRIGGERMODE = _descriptor.EnumDescriptor(
  name='TriggerMode',
  full_name='TriggerMode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Auto', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Normal', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Single', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1039,
  serialized_end=1086,
)
_sym_db.RegisterEnumDescriptor(_TRIGGERMODE)

TriggerMode = enum_type_wrapper.EnumTypeWrapper(_TRIGGERMODE)
_TRIGGERTYPE = _descriptor.EnumDescriptor(
  name='TriggerType',
  full_name='TriggerType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RisingEdge', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FallingEdge', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1088,
  serialized_end=1134,
)
_sym_db.RegisterEnumDescriptor(_TRIGGERTYPE)

TriggerType = enum_type_wrapper.EnumTypeWrapper(_TRIGGERTYPE)
NoError = 0
NotConfiguredYet = 1
ConfigError = 2
ParamError = 3
Auto = 0
Normal = 1
Single = 2
RisingEdge = 0
FallingEdge = 1



_ECHOREQUEST = _descriptor.Descriptor(
  name='EchoRequest',
  full_name='EchoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='EchoRequest.content', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=50,
)


_GETWAVEGROUP = _descriptor.Descriptor(
  name='GetWaveGroup',
  full_name='GetWaveGroup',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=52,
  serialized_end=66,
)


_TERMINATE = _descriptor.Descriptor(
  name='Terminate',
  full_name='Terminate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=68,
  serialized_end=79,
)


_CONFIGURE = _descriptor.Descriptor(
  name='Configure',
  full_name='Configure',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='resolution', full_name='Configure.resolution', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='trigmode', full_name='Configure.trigmode', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='trigtype', full_name='Configure.trigtype', index=2,
      number=3, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ch_trig', full_name='Configure.ch_trig', index=3,
      number=4, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='triglevel', full_name='Configure.triglevel', index=4,
      number=5, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='timescale', full_name='Configure.timescale', index=5,
      number=6, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=82,
  serialized_end=232,
)


_MESSAGETODSP = _descriptor.Descriptor(
  name='MessageToDSP',
  full_name='MessageToDSP',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='MessageToDSP.id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='echoreq', full_name='MessageToDSP.echoreq', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='config', full_name='MessageToDSP.config', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='getwave', full_name='MessageToDSP.getwave', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='terminate', full_name='MessageToDSP.terminate', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='MessageToDSP.payload',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=235,
  serialized_end=402,
)


_ACKNOWLEDGE = _descriptor.Descriptor(
  name='Acknowledge',
  full_name='Acknowledge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='err', full_name='Acknowledge.err', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=404,
  serialized_end=442,
)


_ECHOREPLY = _descriptor.Descriptor(
  name='EchoReply',
  full_name='EchoReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='EchoReply.content', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=444,
  serialized_end=472,
)


_CHANNELCONFIG = _descriptor.Descriptor(
  name='ChannelConfig',
  full_name='ChannelConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ChannelConfig.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='unit', full_name='ChannelConfig.unit', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='min', full_name='ChannelConfig.min', index=2,
      number=3, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max', full_name='ChannelConfig.max', index=3,
      number=4, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=474,
  serialized_end=543,
)


_CONFIGREPLY = _descriptor.Descriptor(
  name='ConfigReply',
  full_name='ConfigReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='err', full_name='ConfigReply.err', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='samplerate', full_name='ConfigReply.samplerate', index=1,
      number=2, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='default_timescale', full_name='ConfigReply.default_timescale', index=2,
      number=3, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_timescale', full_name='ConfigReply.max_timescale', index=3,
      number=4, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='chconfig', full_name='ConfigReply.chconfig', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=546,
  serialized_end=688,
)


_WAVE = _descriptor.Descriptor(
  name='Wave',
  full_name='Wave',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ch_id', full_name='Wave.ch_id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='samples', full_name='Wave.samples', index=1,
      number=2, type=17, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\020\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=690,
  serialized_end=732,
)


_WAVEGROUP = _descriptor.Descriptor(
  name='WaveGroup',
  full_name='WaveGroup',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='triggered', full_name='WaveGroup.triggered', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='wave', full_name='WaveGroup.wave', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=734,
  serialized_end=785,
)


_MESSAGETOHOST = _descriptor.Descriptor(
  name='MessageToHost',
  full_name='MessageToHost',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='MessageToHost.id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ack', full_name='MessageToHost.ack', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='echorep', full_name='MessageToHost.echorep', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='wavegroup', full_name='MessageToHost.wavegroup', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='configreply', full_name='MessageToHost.configreply', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='MessageToHost.payload',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=788,
  serialized_end=956,
)

_CONFIGURE.fields_by_name['trigmode'].enum_type = _TRIGGERMODE
_CONFIGURE.fields_by_name['trigtype'].enum_type = _TRIGGERTYPE
_MESSAGETODSP.fields_by_name['echoreq'].message_type = _ECHOREQUEST
_MESSAGETODSP.fields_by_name['config'].message_type = _CONFIGURE
_MESSAGETODSP.fields_by_name['getwave'].message_type = _GETWAVEGROUP
_MESSAGETODSP.fields_by_name['terminate'].message_type = _TERMINATE
_MESSAGETODSP.oneofs_by_name['payload'].fields.append(
  _MESSAGETODSP.fields_by_name['echoreq'])
_MESSAGETODSP.fields_by_name['echoreq'].containing_oneof = _MESSAGETODSP.oneofs_by_name['payload']
_MESSAGETODSP.oneofs_by_name['payload'].fields.append(
  _MESSAGETODSP.fields_by_name['config'])
_MESSAGETODSP.fields_by_name['config'].containing_oneof = _MESSAGETODSP.oneofs_by_name['payload']
_MESSAGETODSP.oneofs_by_name['payload'].fields.append(
  _MESSAGETODSP.fields_by_name['getwave'])
_MESSAGETODSP.fields_by_name['getwave'].containing_oneof = _MESSAGETODSP.oneofs_by_name['payload']
_MESSAGETODSP.oneofs_by_name['payload'].fields.append(
  _MESSAGETODSP.fields_by_name['terminate'])
_MESSAGETODSP.fields_by_name['terminate'].containing_oneof = _MESSAGETODSP.oneofs_by_name['payload']
_ACKNOWLEDGE.fields_by_name['err'].enum_type = _ERRORCODE
_CONFIGREPLY.fields_by_name['err'].enum_type = _ERRORCODE
_CONFIGREPLY.fields_by_name['chconfig'].message_type = _CHANNELCONFIG
_WAVEGROUP.fields_by_name['wave'].message_type = _WAVE
_MESSAGETOHOST.fields_by_name['ack'].message_type = _ACKNOWLEDGE
_MESSAGETOHOST.fields_by_name['echorep'].message_type = _ECHOREPLY
_MESSAGETOHOST.fields_by_name['wavegroup'].message_type = _WAVEGROUP
_MESSAGETOHOST.fields_by_name['configreply'].message_type = _CONFIGREPLY
_MESSAGETOHOST.oneofs_by_name['payload'].fields.append(
  _MESSAGETOHOST.fields_by_name['ack'])
_MESSAGETOHOST.fields_by_name['ack'].containing_oneof = _MESSAGETOHOST.oneofs_by_name['payload']
_MESSAGETOHOST.oneofs_by_name['payload'].fields.append(
  _MESSAGETOHOST.fields_by_name['echorep'])
_MESSAGETOHOST.fields_by_name['echorep'].containing_oneof = _MESSAGETOHOST.oneofs_by_name['payload']
_MESSAGETOHOST.oneofs_by_name['payload'].fields.append(
  _MESSAGETOHOST.fields_by_name['wavegroup'])
_MESSAGETOHOST.fields_by_name['wavegroup'].containing_oneof = _MESSAGETOHOST.oneofs_by_name['payload']
_MESSAGETOHOST.oneofs_by_name['payload'].fields.append(
  _MESSAGETOHOST.fields_by_name['configreply'])
_MESSAGETOHOST.fields_by_name['configreply'].containing_oneof = _MESSAGETOHOST.oneofs_by_name['payload']
DESCRIPTOR.message_types_by_name['EchoRequest'] = _ECHOREQUEST
DESCRIPTOR.message_types_by_name['GetWaveGroup'] = _GETWAVEGROUP
DESCRIPTOR.message_types_by_name['Terminate'] = _TERMINATE
DESCRIPTOR.message_types_by_name['Configure'] = _CONFIGURE
DESCRIPTOR.message_types_by_name['MessageToDSP'] = _MESSAGETODSP
DESCRIPTOR.message_types_by_name['Acknowledge'] = _ACKNOWLEDGE
DESCRIPTOR.message_types_by_name['EchoReply'] = _ECHOREPLY
DESCRIPTOR.message_types_by_name['ChannelConfig'] = _CHANNELCONFIG
DESCRIPTOR.message_types_by_name['ConfigReply'] = _CONFIGREPLY
DESCRIPTOR.message_types_by_name['Wave'] = _WAVE
DESCRIPTOR.message_types_by_name['WaveGroup'] = _WAVEGROUP
DESCRIPTOR.message_types_by_name['MessageToHost'] = _MESSAGETOHOST
DESCRIPTOR.enum_types_by_name['ErrorCode'] = _ERRORCODE
DESCRIPTOR.enum_types_by_name['TriggerMode'] = _TRIGGERMODE
DESCRIPTOR.enum_types_by_name['TriggerType'] = _TRIGGERTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

EchoRequest = _reflection.GeneratedProtocolMessageType('EchoRequest', (_message.Message,), {
  'DESCRIPTOR' : _ECHOREQUEST,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:EchoRequest)
  })
_sym_db.RegisterMessage(EchoRequest)

GetWaveGroup = _reflection.GeneratedProtocolMessageType('GetWaveGroup', (_message.Message,), {
  'DESCRIPTOR' : _GETWAVEGROUP,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:GetWaveGroup)
  })
_sym_db.RegisterMessage(GetWaveGroup)

Terminate = _reflection.GeneratedProtocolMessageType('Terminate', (_message.Message,), {
  'DESCRIPTOR' : _TERMINATE,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:Terminate)
  })
_sym_db.RegisterMessage(Terminate)

Configure = _reflection.GeneratedProtocolMessageType('Configure', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGURE,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:Configure)
  })
_sym_db.RegisterMessage(Configure)

MessageToDSP = _reflection.GeneratedProtocolMessageType('MessageToDSP', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGETODSP,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:MessageToDSP)
  })
_sym_db.RegisterMessage(MessageToDSP)

Acknowledge = _reflection.GeneratedProtocolMessageType('Acknowledge', (_message.Message,), {
  'DESCRIPTOR' : _ACKNOWLEDGE,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:Acknowledge)
  })
_sym_db.RegisterMessage(Acknowledge)

EchoReply = _reflection.GeneratedProtocolMessageType('EchoReply', (_message.Message,), {
  'DESCRIPTOR' : _ECHOREPLY,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:EchoReply)
  })
_sym_db.RegisterMessage(EchoReply)

ChannelConfig = _reflection.GeneratedProtocolMessageType('ChannelConfig', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELCONFIG,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:ChannelConfig)
  })
_sym_db.RegisterMessage(ChannelConfig)

ConfigReply = _reflection.GeneratedProtocolMessageType('ConfigReply', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGREPLY,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:ConfigReply)
  })
_sym_db.RegisterMessage(ConfigReply)

Wave = _reflection.GeneratedProtocolMessageType('Wave', (_message.Message,), {
  'DESCRIPTOR' : _WAVE,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:Wave)
  })
_sym_db.RegisterMessage(Wave)

WaveGroup = _reflection.GeneratedProtocolMessageType('WaveGroup', (_message.Message,), {
  'DESCRIPTOR' : _WAVEGROUP,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:WaveGroup)
  })
_sym_db.RegisterMessage(WaveGroup)

MessageToHost = _reflection.GeneratedProtocolMessageType('MessageToHost', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGETOHOST,
  '__module__' : 'oscillodsp_pb2'
  # @@protoc_insertion_point(class_scope:MessageToHost)
  })
_sym_db.RegisterMessage(MessageToHost)


_WAVE.fields_by_name['samples']._options = None
# @@protoc_insertion_point(module_scope)
